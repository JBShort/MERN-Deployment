{"version":3,"sources":["views/Main.jsx","views/Edit.jsx","components/PetForm.jsx","views/Details.jsx","App.js","reportWebVitals.js","index.js"],"names":["Main","props","useState","pets","setPets","useEffect","getPetsFromDB","axios","get","then","res","console","log","data","ordered","sort","a","b","type","localeCompare","catch","err","to","map","pet","i","name","_id","Edit","id","setPet","setName","nameErrors","setNameErrors","setType","typeErrors","setTypeErrors","description","setDescription","descriptionErrors","setDescErrors","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","dbErrors","setDbErrors","getPetFromDB","onSubmit","e","preventDefault","updatePet","put","navigate","response","errors","messages","Object","keys","error","message","style","color","onChange","target","value","length","placeholder","PetForm","newPet","post","Details","onClick","delete","deletePet","App","className","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c58d8f2.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { Link } from \"@reach/router\"\r\nimport axios from 'axios';\r\nimport '../App.css';\r\n\r\nconst Main = (props) => {\r\n    const [pets, setPets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getPetsFromDB();\r\n    }, [])\r\n\r\n    const getPetsFromDB = () => {\r\n        axios.get('http://localhost:8000/api/pets')\r\n            .then(res => {\r\n                console.log(res.data)\r\n                let ordered = res.data;\r\n                setPets(ordered.sort((a,b) => a.type.localeCompare(b.type)));\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/pets/new\">Add a new pet to the shelter</Link>\r\n            <h3>These pets are looking for a good home</h3>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Type</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    pets.map((pet, i) => {\r\n                        return (\r\n                            <tr key={i}>\r\n                                <td>{pet.name}</td>\r\n                                <td>{pet.type}</td>\r\n                                <td> \r\n                                    <button> <Link to={\"/pets/\" + pet._id}>Details</Link> </button>\r\n                                    <button> <Link to={\"/pets/edit/\" + pet._id}>Edit</Link> </button>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { Link, navigate } from \"@reach/router\";\r\nimport '../App.css';\r\n\r\nconst Edit = (props) => {\r\n    const {id} = props;\r\n    const [pet, setPet] = useState({});\r\n    const [name, setName] = useState(\"\");\r\n    const [nameErrors, setNameErrors] = useState(\"\");\r\n\r\n    const [type, setType] = useState(\"\");\r\n    const [typeErrors, setTypeErrors] = useState(\"\");\r\n\r\n    const [description, setDescription] = useState(\"\");\r\n    const [descriptionErrors, setDescErrors] = useState(\"\");\r\n\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n\r\n    const [dbErrors, setDbErrors] = useState([]);\r\n\r\n    const getPetFromDB = (id) => {\r\n        console.log(id);\r\n        axios.get('http://localhost:8000/api/pets/' + id)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                setPet(res.data);\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPetFromDB(id);\r\n        setName(pet.name);\r\n        setType(pet.type);\r\n        setDescription(pet.description);\r\n        setSkill1(pet.skill1);\r\n        setSkill2(pet.skill2);\r\n        setSkill3(pet.skill3);\r\n    }, [id, pet.name, pet.type, pet.description, pet.skill1, pet.skill2, pet.skill3])\r\n\r\n    const updatePet = e => {\r\n        e.preventDefault();\r\n        const updatePet = {\r\n            name,\r\n            type,\r\n            description,\r\n            skill1,\r\n            skill2,\r\n            skill3\r\n        }\r\n        axios.put('http://localhost:8000/api/pets/update/' + id, updatePet)\r\n            .then(res => {\r\n                console.log(res);\r\n                navigate(\"/\")\r\n            })\r\n            .catch(err => {\r\n                console.log(\"Error Triggered OwO please look at the reason!!!!\");\r\n                console.log(err.response.data)\r\n                const {errors} = err.response.data;\r\n                const messages = Object.keys(errors).map(error => errors[error].message);\r\n                setDbErrors(messages);\r\n            })\r\n    }\r\n\r\n    const handleName = (e) => {\r\n        setName(e.target.value);\r\n        if(e.target.value.length < 1) {\r\n            setNameErrors(\"Name is required\");\r\n        } else if (e.target.value.length < 3){\r\n            setNameErrors(\"Name must be at least 3 characters\");\r\n        } else {\r\n            setNameErrors(\"\");\r\n        }\r\n    }\r\n\r\n    const handleType = (e) => {\r\n        setType(e.target.value);\r\n        if(e.target.value.length < 1) {\r\n            setTypeErrors(\"Type is required\");\r\n        } else if (e.target.value.length < 3) {\r\n            setTypeErrors(\"Type must be at least 3 characters\");\r\n        } else {\r\n            setTypeErrors(\"\")\r\n        }\r\n    }\r\n\r\n    const handleDesc = (e) => {\r\n        setDescription(e.target.value);\r\n        if(e.target.value.length < 1) {\r\n            setDescErrors(\"Description is required\");\r\n        } else if (e.target.value.length < 3) {\r\n            setDescErrors(\"Description must be at least 3 characters\")\r\n        } else {\r\n            setDescErrors(\"\")\r\n        }\r\n    }\r\n\r\n    const handleSkill1 = (e) => {\r\n        setSkill1(e.target.value);\r\n        \r\n    }\r\n\r\n    const handleSkill2 = (e) => {\r\n        setSkill2(e.target.value);\r\n        \r\n    }\r\n\r\n\r\n    const handleSkill3 = (e) => {\r\n        setSkill3(e.target.value);\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={updatePet}>\r\n                <h3>Edit {pet.name}</h3>\r\n                <Link to=\"/\"><button>Back to Home</button></Link>\r\n            {dbErrors.map((err, i) => <p key={i}>{err}</p>)}\r\n                <p>\r\n                    <label>Name: </label> <br />\r\n                    { \r\n                        nameErrors ?\r\n                        <p style={{color:'red'}}>{ nameErrors }</p> :\r\n                        ''\r\n                    }\r\n                    <input type=\"text\" onChange={handleName} value={name} placeholder={pet.name} />\r\n                </p>\r\n                <p>\r\n                    <label>Type: </label> <br />\r\n                    { \r\n                        typeErrors ?\r\n                        <p style={{color:'red'}}>{ typeErrors }</p> :\r\n                        ''\r\n                    }\r\n                    <input type=\"text\" onChange={handleType} value={type} placeholder={pet.type} />\r\n                </p>\r\n                <p>\r\n                    <label>Description: </label> <br />\r\n                    { \r\n                        descriptionErrors ?\r\n                        <p style={{color:'red'}}>{ descriptionErrors }</p> :\r\n                        ''\r\n                    }\r\n                    <input type=\"text\" onChange={handleDesc} value={description} placeholder={pet.description} />\r\n                </p>\r\n                <div>\r\n                    <h4>Skills</h4>\r\n                    <p>\r\n                        <label>Skill #1</label>\r\n                        <input type=\"text\" onChange={handleSkill1} value={skill1} placeholder={pet.skill1} /> <br />\r\n                        <label>Skill #2</label>\r\n                        <input type=\"text\" onChange={handleSkill2} value={skill2} placeholder={pet.skill2} /> <br />\r\n                        <label>Skill #3</label>\r\n                        <input type=\"text\" onChange={handleSkill3} value={skill3} placeholder={pet.skill3} />\r\n                    </p>\r\n                </div>\r\n                <input type=\"submit\" value=\"Update Pet!\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Edit\r\n","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport { navigate, Link } from '@reach/router';\r\nimport '../App.css';\r\n\r\nconst PetForm = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [nameErrors, setNameErrors] = useState(\"\");\r\n\r\n    const [type, setType] = useState(\"\");\r\n    const [typeErrors, setTypeErrors] = useState(\"\");\r\n\r\n    const [description, setDescription] = useState(\"\");\r\n    const [descriptionErrors, setDescErrors] = useState(\"\");\r\n\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n\r\n    const [dbErrors, setDbErrors] = useState([]);\r\n\r\n    const createPet = (e) => {\r\n        e.preventDefault();\r\n        const newPet = {\r\n            name,\r\n            type,\r\n            description,\r\n            skill1,\r\n            skill2,\r\n            skill3\r\n        }\r\n\r\n        axios.post('http://localhost:8000/api/new', newPet)\r\n        .then(res => {\r\n            console.log(res);\r\n            navigate(\"/\")\r\n        })\r\n        .catch(err => {\r\n            console.log(\"Error Triggered OwO please look at the reason!!!!\");\r\n            console.log(err.response.data)\r\n            const {errors} = err.response.data;\r\n            const messages = Object.keys(errors).map(error => errors[error].message);\r\n            setDbErrors(messages);\r\n        })\r\n    }\r\n\r\n    const handleName = (e) => {\r\n        setName(e.target.value);\r\n        if(e.target.value.length < 1) {\r\n            setNameErrors(\"Name is required\");\r\n        } else if (e.target.value.length < 3){\r\n            setNameErrors(\"Name must be at least 3 characters\");\r\n        } else {\r\n            setNameErrors(\"\");\r\n        }\r\n    }\r\n\r\n    const handleType = (e) => {\r\n        setType(e.target.value);\r\n        if(e.target.value.length < 1) {\r\n            setTypeErrors(\"Type is required\");\r\n        } else if (e.target.value.length < 3) {\r\n            setTypeErrors(\"Type must be at least 3 characters\");\r\n        } else {\r\n            setTypeErrors(\"\")\r\n        }\r\n    }\r\n\r\n    const handleDesc = (e) => {\r\n        setDescription(e.target.value);\r\n        if(e.target.value.length < 1) {\r\n            setDescErrors(\"Description is required\");\r\n        } else if (e.target.value.length < 3) {\r\n            setDescErrors(\"Description must be at least 3 characters\")\r\n        } else {\r\n            setDescErrors(\"\")\r\n        }\r\n    }\r\n\r\n    const handleSkill1 = (e) => {\r\n        setSkill1(e.target.value);\r\n        \r\n    }\r\n\r\n    const handleSkill2 = (e) => {\r\n        setSkill2(e.target.value);\r\n        \r\n    }\r\n\r\n\r\n    const handleSkill3 = (e) => {\r\n        setSkill3(e.target.value);\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>Add a New Pet!</h3>\r\n            <Link to=\"/\"><button>Back to Home</button></Link>\r\n            <form onSubmit={createPet}>\r\n            {dbErrors.map((err, i) => <p key={i}>{err}</p>)}\r\n                <p>\r\n                    <label>Name: </label> <br />\r\n                    { \r\n                        nameErrors ?\r\n                        <p style={{color:'red'}}>{ nameErrors }</p> :\r\n                        ''\r\n                    }\r\n                    <input type=\"text\" onChange={handleName} value={name} />\r\n                </p>\r\n                <p>\r\n                    <label>Type: </label> <br />\r\n                    { \r\n                        typeErrors ?\r\n                        <p style={{color:'red'}}>{ typeErrors }</p> :\r\n                        ''\r\n                    }\r\n                    <input type=\"text\" onChange={handleType} value={type} />\r\n                </p>\r\n                <p>\r\n                    <label>Description: </label> <br />\r\n                    { \r\n                        descriptionErrors ?\r\n                        <p style={{color:'red'}}>{ descriptionErrors }</p> :\r\n                        ''\r\n                    }\r\n                    <input type=\"text\" onChange={handleDesc} value={description} />\r\n                </p>\r\n                <div>\r\n                    <p>\r\n                        <h4>Skills</h4>\r\n                        <label>Skill #1</label>\r\n                        <input type=\"text\" onChange={handleSkill1} value={skill1} /> <br />\r\n                        <label>Skill #2</label>\r\n                        <input type=\"text\" onChange={handleSkill2} value={skill2} /> <br />\r\n                        <label>Skill #3</label>\r\n                        <input type=\"text\" onChange={handleSkill3} value={skill3} />\r\n                    </p>\r\n                </div>\r\n                <input type=\"submit\" value=\"Create Pet!\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PetForm\r\n","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { Link, navigate } from \"@reach/router\";\r\nimport '../App.css';\r\n\r\nconst Details = (props) => {\r\n    const {id} = props;\r\n    const [pet, setPet] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n        getPetFromDB(id);\r\n    }, [id])\r\n\r\n    const getPetFromDB = (id) => {\r\n        console.log(id);\r\n        axios.get('http://localhost:8000/api/pets/' + id)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                setPet(res.data);\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const deletePet = (id) => {\r\n        console.log(id);\r\n        axios.delete('http://localhost:8000/api/pets/delete/' + id)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                navigate('/')\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Details about {pet.name}</h3>\r\n            <Link to=\"/\"><button>Back to Home</button></Link>\r\n            <p>Pet Type: {pet.type}</p>\r\n            <p>Description: {pet.description}</p>\r\n            <h4>Skills</h4>\r\n            <p>{pet.skill1}</p>\r\n            <p>{pet.skill2}</p>\r\n            <p>{pet.skill3}</p>\r\n\r\n            <button onClick={() => {deletePet(pet._id)}}>Adopt {pet.name}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","import './App.css';\nimport {Router} from '@reach/router';\nimport Main from './views/Main';\nimport Edit from './views/Edit';\nimport PetForm from './components/PetForm';\nimport Details from './views/Details';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Pet Shelter</h1>\n      <Router>\n        <Main path=\"/\"></Main>\n        <PetForm path=\"/pets/new\"></PetForm>\n        <Details path=\"/pets/:id\"></Details>\n        <Edit path=\"/pets/edit/:id\"></Edit>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}